#
# Copyright (C) 2021 Acusp
#
# <https://github.com/acusp/OpenWrt-Actions>
#

name: Build OpenWrt

on: 
  release:
    types: [published]  
  push:
    branches: 
      - main   
  schedule:
    - cron: 0 0 * * 0
  watch:
    types: [started]

jobs:
  build:
    name: Build OpenWrt Job
    runs-on: Ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox \
          google* dotnet* powershell openjdk* mysql* php* android*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk \
          gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev \
          lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip \
          p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev \
          autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        df -h

    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        
    - name: Update & install feeds
      run: |
        chmod +x ./customize.sh
        cd openwrt && ../customize.sh
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a
        sed -i "s/luci-theme-bootstrap/luci-theme-argon/" ./feeds/luci/collections/luci/Makefile

    - name: Customize config
      env:
        CONFIG_FILE: 'x86-64.config'
      run: |
        [ -e $CONFIG_FILE ] && cp -f $CONFIG_FILE openwrt/.config
        cd openwrt && make defconfig
        
    - name: Download dl
      working-directory: ./openwrt
      run: |
        make download -j$(nproc) V=s
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) || make -j1 V=s
        echo "======================="
        echo "Space usage:"
        echo "======================="
        df -h
        echo "======================="
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./bin

    - name: Prepare Artifact
      working-directory: ./openwrt
      run: |
        mkdir -p ./artifact/firmware
        rm -rf $(find ./bin/targets/ -type d -name "packages")
        cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
        #mkdir -p ./artifact/package
        #mkdir -p ./artifact/buildinfo
        # cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
        # cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

    - name : Upload firmware
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt
        path: openwrt/artifact/firmware
